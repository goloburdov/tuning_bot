import os
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
import openai

# ‚úÖ –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

openai.api_key = OPENAI_API_KEY

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –º–∞—à–∏–Ω—ã, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç—é–Ω–∏–Ω–≥-–æ–±–≤–µ—Å üé®")

def handle_photo(update: Update, context: CallbackContext):
    user = update.message.from_user
    photo_file = update.message.photo[-1].get_file()
    photo_path = f"{user.id}_photo.jpg"
    photo_file.download(photo_path)

    update.message.reply_text("–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç—é–Ω–∏–Ω–≥-–æ–±–≤–µ—Å... üõ†")

    try:
        # –ó–∞–º–µ–Ω–∏–º –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å openai.Image –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
        response = openai.images.generate(
            model="dall-e-3",
            prompt="A heavily customized car with an aggressive body kit, large wheels, neon underglow, carbon fiber details, futuristic design",
            n=1,
            size="1024x1024"
        )

        image_url = response['data'][0]['url']
        update.message.reply_photo(image_url, caption="–í–æ—Ç —Ç–≤–æ–π –æ–±–≤–µ—Å!")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")

def main():
    updater = Updater(TELEGRAM_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.photo, handle_photo))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()